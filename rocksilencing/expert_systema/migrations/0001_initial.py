# Generated by Django 4.2.1 on 2024-12-07 18:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ReservoirCharacteristics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rock_type', models.CharField(choices=[('sandstone', 'Песчаник'), ('carbonate', 'Карбонат')], max_length=20, verbose_name='Тип породы коллектора')),
                ('pressure_coefficient', models.CharField(choices=[('less_0.8', 'Аномально низкое пластовое давление (0.8-)'), ('0.8_1', 'Нормальное пониженное давление (0.8-1)'), ('1-1.1', 'Нормальное (1 - 1.1)'), ('1_1.3', 'Нормальное повышенное давление (1.1-1.3)'), ('more_1.3', 'Аномально высокое пластовое давление (1.3+)')], max_length=20, verbose_name='Коэффициент аномальности пластового давления')),
                ('temperature', models.FloatField(verbose_name='Пластовая температура, °C')),
                ('is_water_sensitive', models.BooleanField(verbose_name='Является водочувствительным')),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название группы технологий')),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название технологии')),
                ('collector_carbonate', models.SmallIntegerField(verbose_name='Применимость в карбонатных коллекторах')),
                ('collector_terrigenous', models.SmallIntegerField(verbose_name='Применимость в терригенных коллекторах')),
                ('temperature_min', models.FloatField(blank=True, null=True, verbose_name='Минимальная температура')),
                ('temperature_max', models.FloatField(blank=True, null=True, verbose_name='Максимальная температура')),
                ('pressure_anpd', models.SmallIntegerField(verbose_name='Применимость при АНПД')),
                ('pressure_npnd', models.SmallIntegerField(verbose_name='Применимость при НПонД')),
                ('pressure_nd', models.SmallIntegerField(verbose_name='Применимость при НД')),
                ('pressure_npvd', models.SmallIntegerField(verbose_name='Применимость при НПовД')),
                ('pressure_avpd', models.SmallIntegerField(verbose_name='Применимость при АВПД')),
                ('water_compatible', models.BooleanField(verbose_name='Совместимость с водочувствительными коллекторами')),
                ('density_min', models.FloatField(blank=True, null=True, verbose_name='Минимальная плотность')),
                ('density_max', models.FloatField(blank=True, null=True, verbose_name='Максимальная плотность')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technologies', to='expert_systema.technologygroup', verbose_name='Группа технологий')),
            ],
        ),
    ]
